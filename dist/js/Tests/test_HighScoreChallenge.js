import*as utilMethods from"../utils.js";import{state}from"../state.js";import*as questionLogic from"../sharedQuestionLogic.js";import{updateBadgeStatus}from"../badges.js";import{animateBadge}from"../badgeEarned.js";import{gameCorrectness,gameNumOne,gameNumTwo,gameOpOne,gameActual,gameActualContainer,gameAnswerInput,gameAnswerSubmit,gameCurrScore,gameHighScore,gameLevelNumber,gameTracker,gameTracker2,gameTrackerContainer,gameTrackerContainer2}from"../domElements.js";async function gameAnswerCheck(e){e?(utilMethods.correctnessView(!0,gameCorrectness),utilMethods.emphasize(gameCorrectness),utilMethods.visibilityTimedToggle(!1,gameActualContainer,1e3),updateScore(),await updateLevel(),utilMethods.disableInput(gameAnswerInput),await utilMethods.delay(700),utilMethods.enableInput(gameAnswerInput),utilMethods.resetAnswerInput([gameAnswerInput]),questionLogic.newQuestion("game",state.activeOperators)):(utilMethods.correctnessView(!1,gameCorrectness),utilMethods.incorrectMotion(gameCorrectness),utilMethods.disableInput(gameAnswerInput),utilMethods.visibilityTimedToggle(!0,gameActualContainer,1e3),await utilMethods.delay(700),utilMethods.resetAnswerInput([gameAnswerInput]),utilMethods.resetNumberToZero(gameCurrScore),utilMethods.resetWidth([gameTracker]),questionLogic.newQuestion("game",state.activeOperators),await utilMethods.delay(1500),utilMethods.enableInput(gameAnswerInput))}function updateScore(){var e=parseInt(gameCurrScore.innerHTML);gameCurrScore.innerHTML=e+=1,checkHighScore()}function checkHighScore(){var e=gameCurrScore.innerHTML;e>parseInt(state.high_score)?(state.high_score=e,gameHighScore.innerHTML=e):gameHighScore.innerHTML=state.high_score}function levelUp(e){e=`hsl( ${30*e}, 100%, 50%)`;gameTracker.style.backgroundColor=e,gameTracker2.style.backgroundColor=e}function addlevel(){let e=window.getComputedStyle(gameTrackerContainer2).width,t=window.getComputedStyle(gameTrackerContainer2).getPropertyValue("border-width"),a=(e=parseFloat(e.slice(0,-2)),t=parseFloat(t.slice(0,-2)),e-=2*t,window.getComputedStyle(gameTracker2).width);a=parseFloat(a.slice(0,-2)),a+=e/10,gameTracker2.style.width=a+"px"}async function updateLevel(){let e=parseInt(gameLevelNumber.textContent);parseInt(gameCurrScore.textContent)%1==0&&updateProgress(),parseInt(gameCurrScore.textContent)%10==0&&(await updateBadgeStatus("game",state.activeDifficulty,!0),await animateBadge(),utilMethods.disableInput(gameAnswerInput),utilMethods.resetWidth([gameTracker]),addlevel(),levelUp(e+=1),await utilMethods.delay(1e3),utilMethods.enableInput(gameAnswerInput)),gameLevelNumber.textContent=e}async function updateProgress(){let e=window.getComputedStyle(gameTrackerContainer).width,t=window.getComputedStyle(gameTrackerContainer).getPropertyValue("border-width"),a=(e=parseFloat(e.slice(0,-2)),t=parseFloat(t.slice(0,-2)),e-=2*t,window.getComputedStyle(gameTracker).width);a=parseFloat(a.slice(0,-2)),a+=e/10,gameTracker.style.width=a+"px",a==e&&(await utilMethods.delay(1e3),utilMethods.resetWidth([gameTracker]))}function gameUpdateAnswerHandler(e){e=e.target.value;state.userValue=e}function gameCheckAnswerHandler(e){var t=utilMethods.calculation(gameNumOne.innerHTML,gameNumTwo.innerHTML,gameOpOne.innerHTML);gameAnswerCheck((gameActual.innerHTML=t)==state.userValue),e.preventDefault()}gameAnswerInput.addEventListener("input",gameUpdateAnswerHandler),gameAnswerSubmit.addEventListener("submit",gameCheckAnswerHandler),window.onload=function(){var e=utilMethods.convertStringToArray(sessionStorage.getItem("activeOperators")),t=(state.activeOperators=e,sessionStorage.getItem("activeDifficulty"));utilMethods.updateGeneralSelected(e,t),questionLogic.newQuestion("game",e)};